name: Docker

on:
  push:
    branches:
      - master
      - dev
    tag:
      - v*.*.*
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker tag to build"
        required: true
        default: "latest"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase repository name
        id: owner
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      - name: Get git commit hash
        run: |
          git rev-parse --short HEAD > version
          git add version

      - name: Build image
        uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', 'poetry.lock') }}
          flake_paths: ".#packages.x86_64-linux.default"

      - name: Push Docker image
        run: |
          nix --extra-experimental-features nix-command --extra-experimental-features flakes \
              build .#docker
          docker load < result

          if [ -n "${{ github.event.inputs.tag }}" ]; then
            export TAG="${{ github.event.inputs.tag }}"
          else
            export REF=${{ github.ref_name }}

            if [[ $REF == "master" ]]; then
              export TAG=latest
            elif [[ $REF == "dev" ]]; then
              export TAG=dev
            elif [[ $REF == "v"* ]]; then
              export TAG=${REF:1}
            fi
          fi

          export IMAGE="ghcr.io/${{ steps.owner.outputs.lowercase }}:$TAG"
          echo "Pushing $IMAGE"

          docker tag intape $IMAGE
          docker push $IMAGE

          export IMAGE_SIZE=$(docker images --format "{{.Size}}" intape)
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "IMAGE_SIZE=$IMAGE_SIZE" >> $GITHUB_ENV

      - name: Ping webhook
        run: nohup curl -X POST ${{ secrets.WEBHOOK_URL }} &

      - name: Generate job summary
        uses: x-color/github-actions-job-summary@v0.1.0
        with:
          file: .github/workflows/docker-summary.md
          vars: |
            image: ${{ env.IMAGE }}
            size: ${{ env.IMAGE_SIZE }}
